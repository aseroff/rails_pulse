name: Test Suite

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        database: ["sqlite3", "postgresql"]
        rails: ["7.2", "8.0"]

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: rails_pulse_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432


    env:
      RAILS_ENV: test
      DB: ${{ matrix.database }}
      CI: true
      # PostgreSQL configuration for CI
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432

    steps:
    - uses: actions/checkout@v5

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.4'
        bundler-cache: false

    - name: Install dependencies
      run: |
        # Map Rails version to gemfile
        case "${{ matrix.rails }}" in
          "7.2") GEMFILE=gemfiles/rails_7_2.gemfile ;;
          "8.0") GEMFILE=gemfiles/rails_8_0.gemfile ;;
        esac

        BUNDLE_GEMFILE=$GEMFILE bundle install

    - name: Setup database
      run: |
        # Map Rails version to appraisal version and gemfile
        case "${{ matrix.rails }}" in
          "7.2")
            RAILS_VERSION="rails-7-2"
            GEMFILE=gemfiles/rails_7_2.gemfile
            ;;
          "8.0")
            RAILS_VERSION="rails-8-0"
            GEMFILE=gemfiles/rails_8_0.gemfile
            ;;
        esac

        if [[ "${{ matrix.database }}" == "postgresql" ]]; then
          echo "Setting up PostgreSQL database..."
          pg_isready -h localhost -p 5432 || exit 1
        else
          echo "Setting up SQLite database..."
        fi

        # Use our new test_setup_for_version task with correct gemfile
        BUNDLE_GEMFILE=$GEMFILE bundle exec rake "test_setup_for_version[${{ matrix.database }},$RAILS_VERSION]"

    - name: Run tests
      run: |
        # Map Rails version to appraisal version and gemfile
        case "${{ matrix.rails }}" in
          "7.2")
            RAILS_VERSION="rails-7-2"
            GEMFILE=gemfiles/rails_7_2.gemfile
            ;;
          "8.0")
            RAILS_VERSION="rails-8-0"
            GEMFILE=gemfiles/rails_8_0.gemfile
            ;;
        esac

        # Run tests with the specific Rails version and database using correct gemfile
        if [[ "${{ matrix.database }}" == "sqlite3" && "$RAILS_VERSION" == "rails-8-0" ]]; then
          # Default combination
          BUNDLE_GEMFILE=$GEMFILE bundle exec rake test
        else
          # Use appraisal for other combinations
          DB=${{ matrix.database }} BUNDLE_GEMFILE=$GEMFILE bundle exec appraisal $RAILS_VERSION rake test
        fi

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.4'
        bundler-cache: true

    - name: Run RuboCop
      run: bundle exec rubocop

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.4'
        bundler-cache: true

    - name: Set up Node.js
      uses: actions/setup-node@v5
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install Node dependencies
      run: npm install

    - name: Build assets
      run: npm run build

    - name: Build gem
      run: bundle exec rake build
